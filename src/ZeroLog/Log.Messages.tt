<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ include file="LogMetadata.ttinclude" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace ZeroLog;

#nullable enable

partial interface ILog
{
<#
    foreach (var levelName in _logLevels)
    {
#>
    bool Is<#= levelName #>Enabled { get; }
<#
    }
#>

<#
    foreach (var levelName in _logLevels)
    {
#>
    LogMessage <#= levelName #>();
    void <#= levelName #>(string? message);
    void <#= levelName #>(string? message, Exception? ex);

<#
    }
#>
}

partial class Log
{
<#
        foreach (var levelName in _logLevels)
        {
#>
    public bool Is<#= levelName #>Enabled => Level.<#= levelName #> >= _logLevel;

    public LogMessage <#= levelName #>()
    {
        return Is<#= levelName #>Enabled
            ? GetLogMessage(Level.<#= levelName #>)
            : LogMessage.Empty;
    }

    public void <#= levelName #>(string? message)
    {
        if (!Is<#= levelName #>Enabled)
            return;

        var logMessage = GetLogMessage(Level.<#= levelName #>);
        logMessage.InternalAppend(message);
        logMessage.Log();
    }

    public void <#= levelName #>(string? message, Exception? ex)
    {
        if (!Is<#= levelName #>Enabled)
            return;

        var logMessage = GetLogMessage(Level.<#= levelName #>);
        logMessage.InternalAppend(message);
        logMessage.InternalAppend(ex?.ToString());
        logMessage.Log();
    }

<#
        }
#>
}
