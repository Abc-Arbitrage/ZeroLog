<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>
//------------------------------------------------------------------------------
<#@ include file="LogMetadata.ttinclude" #>
using System;
using System.Runtime.CompilerServices;

namespace ZeroLog;

#nullable enable

partial class LogMessage
{
<#
    foreach (var type in _valueTypes)
    {
#>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public LogMessage Append(<#= type.name #> value)
    {
        InternalAppendValueType(value, ArgumentType.<#= type.argType #>);
        return this;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public LogMessage Append(<#= type.name #>? value)
    {
        InternalAppendValueType(value, ArgumentType.<#= type.argType #>);
        return this;
    }

<#
        if (type.isFormattable)
        {
#>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public LogMessage Append(<#= type.name #> value, string format)
    {
        InternalAppendValueType(value, format, ArgumentType.<#= type.argType #>);
        return this;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public LogMessage Append(<#= type.name #>? value, string format)
    {
        InternalAppendValueType(value, format, ArgumentType.<#= type.argType #>);
        return this;
    }

<#
        }
#>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public LogMessage AppendKeyValue(string key, <#= type.name #> value)
    {
        InternalAppendKeyValue(key, value, ArgumentType.<#= type.argType #>);
        return this;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public LogMessage AppendKeyValue(string key, <#= type.name #>? value)
    {
        InternalAppendKeyValue(key, value, ArgumentType.<#= type.argType #>);
        return this;
    }

<#
    }
#>
}
